version: '3'
services:
  db:
    image: postgres:12
    env_file:
      prod-env-db
    volumes:
      - "./docker/db/devday_db-prod.sql:/docker-entrypoint-initdb.d/init-user-db.sql"
      - "pg_data:/var/lib/postgresql/data"
  vault:
    image: vault:1.6.0
    volumes:
      - "./docker/vault/config:/vault/config"
      - "vaultlogs:/vault/logs"
      - "vaultfile:/vault/file"
    command: server
  mail:
    image: ${DOCKER_REGISTRY}devday-website-mail:prod
    build:
      context: docker/mail
      args:
        http_proxy: ${http_proxy}
        no_proxy: ${no_proxy},vault
    env_file:
      prod-env-mail
  app:
    # Tag image as prod to distinguish from dev
    image: ${DOCKER_REGISTRY}devday-website-app:prod
    build:
      context: .
      dockerfile: app-prod.Dockerfile
      args:
        http_proxy: ${http_proxy}
        no_proxy: ${no_proxy},vault
    environment:
      DEVDAY_PG_DBNAME: devday
      DEVDAY_PG_HOST: db
      DEVDAY_PG_PORT: 5432
      DEVDAY_PG_USER: devday
      DJANGO_SETTINGS_MODULE: devday.settings.prod
      VAULT_URL: https://vault:8200
    env_file:
      prod-env
    volumes:
      - "devday_media:/app/media"
      - "devday_static:/app/static"
      - "devday_logs:/app/logs"
    depends_on:
      - db
      - vault
      - mail
  revproxy:
    image: ${DOCKER_REGISTRY}devday-website-revproxy:prod
    build:
      context: docker/revproxy
    ports:
      - "8080:80"
      - "80:80"
    depends_on:
      - app
    volumes:
      - "devday_media:/usr/local/apache2/htdocs/media"
      - "devday_static:/usr/local/apache2/htdocs/static"
      - "devday_twitterwall:/usr/local/apache2/htdocs/twitterwall"

volumes:
  vaultlogs:
  vaultfile:
  devday_logs:
  devday_twitterwall:
  pg_data:
